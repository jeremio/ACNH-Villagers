import * as console from 'node:console'
import { expect, test } from '@playwright/test'

test.describe('Internationalization', () => {
  test.beforeEach(async ({ page }) => {
    await page.goto('/')
    // Attendre que la mosaÃ¯que soit complÃ¨tement chargÃ©e avant de continuer.
    await expect(page.locator('.mosaique .villager-card')).toHaveCount(391)
  })

  test('should switch language and translate content, regardless of starting language', async ({ page }) => {
    // Utiliser une expression rÃ©guliÃ¨re pour trouver le sÃ©lecteur de langue, quelle que soit la langue actuelle.
    const langSelector = page.getByText(/ğŸ‡«ğŸ‡· FranÃ§ais|ğŸ‡ºğŸ‡¸ English/)
    const currentLangText = await langSelector.textContent()

    console.log(currentLangText)
    if (currentLangText === 'ğŸ‡«ğŸ‡· FranÃ§ais') {
      // L'application est en franÃ§ais, on passe Ã  l'anglais.
      await langSelector.click()
      await page.getByText('ğŸ‡ºğŸ‡¸ English').click()

      // VÃ©rifier que le contenu est bien en anglais.
      await expect(page.getByText('Reset')).toBeVisible()
      await expect(page.getByText('Genders')).toBeVisible()
    }
    else {
      // L'application est en anglais, on passe au franÃ§ais.
      await langSelector.click()
      await page.getByText('ğŸ‡«ğŸ‡· FranÃ§ais').click()

      // VÃ©rifier que le contenu est bien en franÃ§ais.
      await expect(page.getByText('RÃ©initialiser')).toBeVisible()
      await expect(page.getByText('Genres')).toBeVisible()
    }
  })
})
